#lang racket

;; üí° attention-listener ‚Äî –º–æ–¥–µ–ª—å —Ñ–ª–æ—É –≤–Ω–∏–º–∞–Ω–∏—è –∫–∞–∫ —Ü–µ–ø–æ—á–∫–∞ —Å—Ç–∞–¥–∏–π

(define (attention-listener input filter response)

  (let* (
         ;; –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ—Ç–æ–∫–∞
         (monitored-stream input)

         ;; –í—ã–¥–µ–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –≤–Ω–∏–º–∞–Ω–∏—è
         (detected-trigger (filter monitored-stream))

         ;; –†–µ–∞–∫—Ü–∏—è ‚Äî –≤—ã–∑–æ–≤ —Ä–µ–∞–∫—Ü–∏–∏
         (final-response (response detected-trigger))
         )

    final-response
    )
  )